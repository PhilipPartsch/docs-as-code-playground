############################################
Example how to use variant in specifications
############################################

.. package:: P1
   :id: P_P1

   .. comp:: C1
      :id: C_C1
      :satisfied_by: P_P1

   .. needarch::
      :scale: 50
      :align: center

      {{uml(need().id)}} {
      {{import("satisfied_by_back")}}
      }

.. sys_req:: OS
   :id: SYSRQ_DETECT_OS
   :status: [hw_ARM and os_LINUX]: new, os_MAC: new2, os_LINUX: accepted, os_Windows: test, unknown
   :satisfied_by: {%if os_MAC%}SWRQ_EXAMPLE_1{%else%}SWRQ_EXAMPLE_2{%endif%}

   The status depends on OS.

.. sw_req:: Software Example 1
   :id: SWRQ_EXAMPLE_1
   
   This is the first Example Software Requirement.

.. sw_req:: Software Example 1
   :id: SWRQ_EXAMPLE_2
   
   This is the secound Example Software Requirement.

.. only:: os_MAC

   generated by only: Build for Mac

.. only:: os_LINUX

   generated by only: Build for Linux

.. only:: os_Windows

   generated by only: Build for Windows

{%if os_MAC%}
generated by jinja: Build for Mac
{%elif os_LINUX%}
generated by jinja: Build for Linux
{%elif os_Windows%}
generated by jinja: Build for Windows
{%else%}
generated by jinja: Build for undefined
{%endif%}

{{hello}}

